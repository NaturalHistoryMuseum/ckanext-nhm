diff --git a/ckanext/reclinepreview/theme/public/vendor/recline/recline.js b/ckanext/reclinepreview/theme/public/vendor/recline/recline.js
index 75bd395..5a47fab 100644
--- a/ckanext/reclinepreview/theme/public/vendor/recline/recline.js
+++ b/ckanext/reclinepreview/theme/public/vendor/recline/recline.js
@@ -3498,17 +3498,21 @@ my.SlickGrid = Backbone.View.extend({
     // custom formatter as default one escapes html
     // plus this way we distinguish between rendering/formatting and computed value (so e.g. sort still works ...)
     // row = row index, cell = cell index, value = value, columnDef = column definition, dataContext = full row values
-    var formatter = function(row, cell, value, columnDef, dataContext) {
-      if(columnDef.id == "del"){
-        return self.templates.deleterow 
-	}
-	var field = self.model.fields.get(columnDef.id);
-      if (field.renderer) {
-        return  field.renderer(value, field, dataContext);
-      }else {
-        return  value 
-      }
-    };
+    var formatter
+    // Only define the formatter if there's no formatter factory defined
+    if(!('defaultFormatter' in options || 'formatterFactory' in options)){
+        formatter = function(row, cell, value, columnDef, dataContext) {
+          if(columnDef.id == "del"){
+            return self.templates.deleterow
+        }
+        var field = self.model.fields.get(columnDef.id);
+          if (field.renderer) {
+            return  field.renderer(value, field, dataContext);
+          }else {
+            return  value
+          }
+        };
+    }
diff --git a/ckanext/reclinepreview/theme/public/preview_recline.js b/ckanext/reclinepreview/theme/public/preview_recline.js
index f448640..bf27228 100644
--- a/ckanext/reclinepreview/theme/public/preview_recline.js
+++ b/ckanext/reclinepreview/theme/public/preview_recline.js
@@ -1,4 +1,3 @@
-// recline preview module
 this.ckan.module('reclinepreview', function (jQuery, _) {
   return {
     options: {
@@ -110,7 +109,21 @@ this.ckan.module('reclinepreview', function (jQuery, _) {
         view = this._newDataExplorer(dataset);
       } else {
         // default to Grid
-        view = new recline.View.SlickGrid({model: dataset});
+
+        if (reclineView.state === undefined) {
+            reclineView.state = {}
+        }else{
+            // Loop through all properties that could be functions
+            // If they are defined, convert to func
+            $.each(['defaultFormatter', 'formatterFactory', 'editorFactory'], function(i, value){
+                if(reclineView.state['gridOptions'][value] !== undefined){
+                    // String to func
+                    reclineView.state['gridOptions'][value] = window[reclineView.state['gridOptions'][value]];
+                }
+            });
+        }
+
+        view = new recline.View.SlickGrid({model: dataset, state: reclineView.state});
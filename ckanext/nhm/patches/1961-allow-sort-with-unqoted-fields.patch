diff --git a/ckanext/datastore/plugin.py b/ckanext/datastore/plugin.py
index f16980b..625adec 100644
--- a/ckanext/datastore/plugin.py
+++ b/ckanext/datastore/plugin.py
@@ -332,23 +332,17 @@ class DatastorePlugin(p.SingletonPlugin):
 
     def _is_valid_sort(self, clause, fields_types):
         clause = clause.encode('utf-8')
-        clause_parts = shlex.split(clause)
 
-        if len(clause_parts) == 1:
-            field, sort = clause_parts[0], 'asc'
-        elif len(clause_parts) == 2:
-            field, sort = clause_parts
-        else:
-            return False
-
-        field, sort = unicode(field, 'utf-8'), unicode(sort, 'utf-8')
+        if len(clause) > 4 and clause[-4:].lower() == ' asc':
+            clause = clause[0:-4]
+        elif len(clause) > 5 and clause[-5:].lower() == ' desc':
+            clause = clause[0:-5]
 
-        if field not in fields_types:
-            return False
-        if sort.lower() not in ('asc', 'desc'):
-            return False
+        # For backward compatibility, assume the field may be quoted
+        if clause.startswith('"') and clause.endswith('"') and len(clause) > 2:
+            clause = clause[1:-1]
 
-        return True
+        return unicode(clause, 'utf-8') in fields_types
 
     def datastore_delete(self, context, data_dict, fields_types, query_dict):
         query_dict['where'] += self._where(data_dict, fields_types)
@@ -439,11 +433,18 @@ class DatastorePlugin(p.SingletonPlugin):
 
         for clause in clauses:
             clause = clause.encode('utf-8')
-            clause_parts = shlex.split(clause)
-            if len(clause_parts) == 1:
-                field, sort = clause_parts[0], 'asc'
-            elif len(clause_parts) == 2:
-                field, sort = clause_parts
+            sort = 'asc'
+            if len(clause) > 4 and clause[-4:].lower() == ' asc':
+                clause = clause[0:-4]
+            elif len(clause) > 5 and clause[-5:].lower() == ' desc':
+                sort = 'desc'
+                clause = clause[0:-5]
+
+            # For backward compatibility, assume the field may be quoted
+            if clause.startswith('"') and clause.endswith('"') and len(clause) > 2:
+                field = clause[1:-1]
+            else:
+                field = clause
 
             field, sort = unicode(field, 'utf-8'), unicode(sort, 'utf-8')
 
